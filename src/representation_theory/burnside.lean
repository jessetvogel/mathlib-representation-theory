import group_theory.solvable number_theory.basic
import representation_theory.basic
import ring_theory.simple_module

-- Right now, this is a catch all for everything needed for Burnside's Theorem. Over time we will

section
open monoid_algebra (lift) (of)
open linear_map
open ring

open representation

variables {k G V : Type*} [comm_ring k] [group G] [add_comm_group V] [module k V]
variables (ρ : representation k G V)

-- Not sure the following structure is the best way to encode this
-- I expect this to be replaced once we've found the best way to talk about (the set of) irreducibles
class is_irreducible_representation : Prop :=
 (simple_as_module : is_simple_module (monoid_algebra k G) ρ.as_module)
end

-- Todo: state theorem 11.17, and write a sketch of the proof

section
open nat.prime
open group

variables (p q : ℕ) [fact p.prime] [fact q.prime] (G : Type*) [group G]

def is_pq_group : Prop := ∃ a b: ℕ, nat.card G = p^a * q^b

lemma finite_of_pq_group (h : is_pq_group p q G) : finite G :=
begin
  have h : nat.card G ≠ 0 := begin
    rcases h with ⟨a, b, hc⟩,
    rw hc,
    exact mul_ne_zero (pow_ne_zero _ (ne_zero.ne p)) (pow_ne_zero _ (ne_zero.ne q)),
  end,
  exact nat.finite_of_card_ne_zero h,
end

-- The following lemma's should be in separate files probably

lemma solvable_of_pq_group_or_element_with_pm_conjugates (h : is_pq_group p q G) : is_solvable G ∨ ∃ (σ : G) m : ℕ, nat.card (conjugates_of σ) = p^m ∧ m > 0 := sorry
-- Proof should be relatively easy group theory (see wikipedia's proof of Burnside theorem)

theorem solvable_of_pq_group (h : is_pq_group p q G) : is_solvable G :=
begin
  have solvable_or_sigma := solvable_of_pq_group_or_element_with_pm_conjugates p q G h,

  cases solvable_or_sigma,
  exact solvable_or_sigma,

  rcases solvable_or_sigma with ⟨σ, m, conj_sigma_eq_pm, m_geq_0⟩,

  -- Sketch of proof:

  -- Let N be the subgroup generated by sigma * tau^{-1} for tau^{-1} a conjugate of sigma, and use N
  -- Easy

  -- Show N is normal
  -- Easy

  -- Show sum_{irreps} chi(1)chi(sigma) = 0
  -- Remi is working on the dual of this
  -- Need #irreps = #classes
  -- Need k[G] = sum_{M irrep} End(M) for this
  -- This is probably the most difficult thing

  -- Show sum_{irreps, irrep =/= 1} chi(1) chi(sigma) = -1
  -- Easy

  -- Show there is irrep S, S =/= trivial, with p not dividing chi(1)
  -- Need the fact that chi(sigma) is integral over Z, plus that -1 is not in pZbar
  -- Alex and Mike are working on this
  -- Need the fact that chi(1) is an integer

  -- Show that N acts trivially on S
  -- This is Theorem 1.17
  -- Difficult, and split

  -- Hence N is a nontrivial group (as m > 0) and not G (as G doesn't act trivially on S), and normal
  -- So G is solvable by induction
  -- We need that subgroups and quotients of pq groups are pq groups, should be easy
  -- Also need strong induction
  sorry,
end

end
